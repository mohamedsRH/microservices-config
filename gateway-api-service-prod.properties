server.port=8089

spring.application.name=gateway-api-service
spring.cloud.discovery.enabled=true

spring.main.web-application-type=reactive

### dynamic routing ###
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

spring.cloud.gateway.routes[0].id=book-ms
spring.cloud.gateway.routes[0].uri=http://localhost:8181/books
spring.cloud.gateway.routes[0].predicates[0]=Path=/books/**

#spring.cloud.gateway.routes[1].id=library-ms
#spring.cloud.gateway.routes[1].uri=http://localhost:8282/libraries
#spring.cloud.gateway.routes[1].predicates[0]=Path=/libraries/**


spring.security.oauth2.client.registration.keycloak.client-id=client
spring.security.oauth2.client.registration.keycloak.client-secret=4PIykcIcJDyojxq5E0wzs3pjboorDwfx
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/login/oauth2/code/keycloak
spring.security.oauth2.client.registration.keycloak.scope=openid, profile, email
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://keycloak:8080/realms/microservices

spring.security.oauth2.client.provider.keycloak.authorization-uri=http://keycloak:8080/auth/realms/microservices/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://keycloak:8080/auth/realms/microservices/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://keycloak:8080/auth/realms/microservices/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://keycloak:8080/auth/realms/microservices/protocol/openid-connect/certs

# Configure H2
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.username=sa
spring.datasource.password=password
spring.datasource.driver-class-name=org.h2.Driver

# Hibernate settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.h2.console.enabled=true
